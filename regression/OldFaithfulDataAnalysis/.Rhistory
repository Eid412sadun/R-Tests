install.packages("alr1")
install.packages(c("assertthat", "jsonlite", "stringi", "tibble"))
install.packages(c("cluster", "lattice", "Matrix", "mgcv", "nlme", "survival"), lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
data("alr1")
data("Galton")
install.packages("HistData")
library(HistData)
install.packages("ggplot2")
library(ggplot2)
data("Galton")
plot(Galton$parent, Galton$child)
View(Galton)
plot(Galton$parent, Galton$child)
plot(Galton$child~Galton$parent, xlab = "Parent Height",ylab = "Child Height", main = "Galton Height Data" )
plot(Galton$child~Galton$parent, xlab = "Parent Height",ylab = "Child Height", main = "Galton Height Data" )
heights.lm = lm(child~parent, Galton)
abline(heights.lm)
summary(heights.lm)
confint(heights.lm)
confint(heights.lm, level=0.95)
predict(heights.lm, newdata=list(child=65), interval="confidence",level=.95)
predict(heights.lm, newdata=list(Galton$child=65), interval="confidence",level=.95)
predict(heights.lm, newdata=list(child=65), interval="confidence",level=.95)
predict(heights.lm, newdata=list(child=65, Galton), interval="confidence",level=.95)
newdata=list(child=65)
predict(heights.lm, newdata, interval="confidence",level=.95)
heights.lm
newdata=list(parent=65)
predict(heights.lm, newdata, interval="confidence",level=.95)
predict(heights.lm, newdata, interval="predict",level=.95)
predict(heights.lm, newdata, interval="confidence",level=.90)
predict(heights.lm, newdata, interval="predict",level=.90)
data("UN11")
install.packages("HistData")
install.packages("HistData")
install.packages("HistData")
library(HistData)
data("UN11")
library(HistData)
install.packages("alr4")
library("alr4")
install.packages("HistData")
install.packages("HistData")
data("UN11")
install.packages("alr4")
library("alr4")
data("UN11")
names(UN11)
data("UN11")
data("Galton")
# Ques5
install.packages("HistData")
library(HistData)
install.packages("ggplot2")
library(ggplot2)
data("Galton")
# parent = x, child = y
plot(Galton$child~Galton$parent, xlab = "Parent Height",ylab = "Child Height", main = "Galton Height Data" )
# Running linear model regression, always pass y~x
heights.lm = lm(child~parent, Galton)
abline(heights.lm)
summary(heights.lm)
confint(heights.lm, level=0.95)
newdata=list(parent=65)
predict(heights.lm, newdata, interval="confidence",level=.90)
predict(heights.lm, newdata, interval="predict",level=.90)
View(Galton)
View(UN11)
plot(UN11$fertility~UN11$ppgdp, xlab = "Gross National product per person (USD)",ylab = "Birth rate per 1000 females", main = "UN 2011 Data" )
# to add regression line
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
to add regression line
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
# to add regression line
ggplot(Galton, aes(x=parent, y=child)) + geom_point(size=2, alpha=0.7) + xlab("Height of parent") +
ylab("Height of son") + ggtitle("Galton Height Data") + geom_smooth(methog='lm')
ggplot(UN11, aes(x=ppgdp, y=fertility) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm'))
# Ques5
install.packages("alr4")
library("alr4")
data("UN11")
View(UN11)
names(UN11)
install.packages("ggplot2")
library(ggplot2)
#Predictor (X) : ppgdp
#Response (Y) : fertility
plot(UN11$fertility~UN11$ppgdp, xlab = "Gross National product per person (USD)",ylab = "Birth rate per 1000 females", main = "UN 2011 Data" )
# to add regression line
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
install.packages("alr4")
plot(UN11$fertility~UN11$ppgdp, xlab = "Gross National product per person (USD)",ylab = "Birth rate per 1000 females", main = "UN 2011 Data" )
plot(UN11$fertility~UN11$ppgdp, xlab = "Gross National product per person (USD)",ylab = "Birth rate per 1000 females", main = "UN 2011 Data" )
abline(lm(fertility~ppgdp, UN11))
to add regression line
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
# Ques5
install.packages("alr4")
library("alr4")
data("UN11")
View(UN11)
names(UN11)
install.packages("ggplot2")
library(ggplot2)
#Predictor (X) : ppgdp
#Response (Y) : fertility
plot(UN11$fertility~UN11$ppgdp, xlab = "Gross National product per person (USD)",ylab = "Birth rate per 1000 females", main = "UN 2011 Data" )
abline(lm(fertility~ppgdp, UN11))
# to add regression line
ggplot(UN11, aes(x=ppgdp, y=fertility)) + geom_point(size=2, alpha=0.7)
+ xlab("Gross National product per person (USD)")
+ ylab("Birth rate per 1000 females") + ggtitle("UN 2011 Data")
+ geom_smooth(methog='lm')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
plot(log(UN11$fertility)~log(UN11$ppgdp),
xlab = "Log - Gross National product per person (USD)",
ylab = "Log - Birth rate per 1000 females",
main = "UN 2011 Data" )
abline(lm(log(fertility)~log(ppgdp), UN11))
un11_log_lm=lm(log(fertility)~log(ppgdp), UN11)
abline(un11_log_lm)
summary(un11_log_lm)
install.packages("ggplot2")
library(ggplot2)
setwd("/opt/Code/My/R-Tests/regression/OldFaithfulDataAnalysis/")
oldfaithful= read.table("oldfaithful.txt")
colnames(oldfaithful) <- c("srno","eruptions","waiting")
oldfaithful_lm = lm(oldfaithful$waiting~oldfaithful$eruptions)
summary(oldfaithful_lm)
confint(oldfaithful_lm,level=0.95)
# Analysis of variance table
anova(oldfaithful_lm)
ggplot(data=oldfaithful,aes(x="",y=eruption))
ggplot(data=oldfaithful,aes(x="",y=eruption))
ggplot(data=oldfaithful,aes(x="",y="eruption)")
ggplot(data=oldfaithful,aes(x="",y=eruption))
ggplot(data=oldfaithful,aes(x="",y=eruptions))
+ geom_boxplot(color= "blue")
+ scale_x_discrete(name = "Predictor")
+ scale_y_continuous(name = "Eruption time in minutes")
+geom_jitter(width = 0.2, color= "red")
ggplot(data=oldfaithful,aes(x="",y=eruptions))
+ geom_boxplot(color= "blue")
+ scale_x_discrete(name = "Predictor")
+ scale_y_continuous(name = "Eruption time in minutes")
+geom_jitter(width = 0.2, color= "red")
ggplot(data=oldfaithful,aes(y=eruptions))
ggplot(data=oldfaithful,aes(x="",y=eruptions))
ggplot(data=oldfaithful,aes(x="",y=eruptions))
+ geom_histogram()
ggplot(data=oldfaithful,aes(x=eruptions))
+ geom_histogram()
ggplot(data=oldfaithful,aes(x=eruptions))
+ geom_boxplot()
ggplot(data=oldfaithful,aes(y=eruptions))
+ geom_boxplot()
ggplot(data=oldfaithful,aes(y=eruptions))
+ geom_boxplot(color=blue)
ggplot(data=oldfaithful,aes(y=eruptions))
+ geom_boxplot(color= "blue")
ggplot(data=oldfaithful,aes(y=eruptions))
+ geom_boxplot(color= "blue")
ggplot(data=oldfaithful,aes(y=eruptions, x =""))
+ geom_boxplot(color= "blue")
install.packages("ggplot2")
library(ggplot2)
setwd("/opt/Code/My/R-Tests/regression/OldFaithfulDataAnalysis/")
oldfaithful= read.table("oldfaithful.txt")
colnames(oldfaithful) <- c("srno","eruptions","waiting")
oldfaithful_lm = lm(oldfaithful$waiting~oldfaithful$eruptions)
summary(oldfaithful_lm)
confint(oldfaithful_lm,level=0.95)
# Analysis of variance table
anova(oldfaithful_lm)
ggplot(data=oldfaithful,aes(y=eruptions, x =""))
+ geom_boxplot(color= "blue")
+ scale_x_discrete(name = "Predictor")
+ scale_y_continuous(name = "Eruption time in minutes")
+geom_jitter(width = 0.2, color= "red")
install.packages("ggplot2")
install.packages("ggplot2")
setwd("/opt/Code/My/R-Tests/regression/OldFaithfulDataAnalysis/")
oldfaithful= read.table("oldfaithful.txt")
colnames(oldfaithful) <- c("srno","eruptions","waiting")
oldfaithful_lm = lm(oldfaithful$waiting~oldfaithful$eruptions)
summary(oldfaithful_lm)
confint(oldfaithful_lm,level=0.95)
# Analysis of variance table
anova(oldfaithful_lm)
ggplot(data=oldfaithful,aes(y=eruptions, x =""))
+ geom_boxplot(color= "blue")
ggplot(data=oldfaithful,aes(y=eruptions, x =""))
+ geom_boxplot(color= "blue")
